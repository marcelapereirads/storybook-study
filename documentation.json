{
    "pipes": [],
    "interfaces": [
        {
            "name": "IErrors",
            "id": "interface-IErrors-7cf5a11d0b42375b7f5a5eab32c34ee3",
            "file": "src/app/pages/input-page/input-page.component.ts",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\ninterface IErrors {\n  required: string;\n  maxlength: string;\n}\n\n@Component({\n  selector: 'app-input-page',\n  templateUrl: './input-page.component.html'\n})\nexport class InputPageComponent {\n\n  get errors(): string[] {\n    const errorMessages: IErrors = {\n      required: 'Please fill in the field',\n      maxlength: 'The value exceeds the allowed number of characters'\n    };\n \n    if (this.control.errors !== null) {\n      return Object.keys(this.control.errors).map((error) => errorMessages[error as keyof IErrors]);\n    }\n\n    return [];\n  }\n\n  control = new FormControl(null, [Validators.required, Validators.maxLength(10)]);\n\n  readonly code = `<app-input label=\"Input field\" id=\"simple-input\" [disabled]=\"false\" [errors]=\"errors\" [control]=\"control\"></app-input>`;\n\n}\n",
            "properties": [
                {
                    "name": "maxlength",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "required",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "HamburgerButtonService",
            "id": "injectable-HamburgerButtonService-f1b63d038947c2f278570bc3388d2280",
            "file": "src/app/core/header/hamburguer-button/hamburger-button.service.ts",
            "properties": [
                {
                    "name": "buttonClicked$",
                    "defaultValue": "new BehaviorSubject<boolean>(this.menuIsOpen)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "isMobile",
                    "defaultValue": "this.breakpointObserver.isMatched('(min-width: 768px)')",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "menuIsOpen",
                    "defaultValue": "this.isMobile",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [
                {
                    "name": "closeMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "emitClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                },
                {
                    "name": "getOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 30
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HamburgerButtonService {\n\n  isMobile = this.breakpointObserver.isMatched('(min-width: 768px)');\n  menuIsOpen = this.isMobile;\n  buttonClicked$ = new BehaviorSubject<boolean>(this.menuIsOpen);\n\n  constructor(private breakpointObserver: BreakpointObserver) { }\n\n  emitClick(): void {\n    if (!this.isMobile) {\n      this.menuIsOpen = !this.menuIsOpen;\n      this.buttonClicked$.next(this.menuIsOpen);\n    }\n  }\n\n  closeMenu(): void {\n    if (!this.isMobile) {\n      this.menuIsOpen = false;\n    }\n  }\n\n  getOpen(): Observable<boolean> {\n    return this.buttonClicked$.asObservable();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-34e7bb58cd408649f019e440c35026ac",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "menuIsOpen",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "menuSubscription$",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "title",
                    "defaultValue": "'storybook-study'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                },
                {
                    "name": "verifyMenuOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { HamburgerButtonService } from './core/header/hamburguer-button/hamburger-button.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'storybook-study';\n  menuSubscription$!: Subscription;\n  menuIsOpen = true;\n\n  constructor(private hamburgerButtonService: HamburgerButtonService) { }\n\n  ngOnInit() {\n    this.verifyMenuOpen();\n  }\n\n  ngOnDestroy() {\n    this.menuSubscription$.unsubscribe();\n  }\n\n  verifyMenuOpen() {\n    this.menuSubscription$ = this.hamburgerButtonService.getOpen().subscribe((isOpen: boolean) => this.menuIsOpen = isOpen);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/variables\";\n\n.page {\n    &__shaddow {\n        background-color: rgba(65%, 65%, 65%, 0.4);\n        width: 100%;\n        height: 100%;\n        position: absolute;\n    }\n\n    &__sidebar {\n        min-width: 300px;\n        max-width: 80%;\n        \n    }\n\n    &__main {\n        width: 80%;\n    }\n}\n\n@media (min-width: $mobile-width) {\n    .page {\n        &__content {\n            display: flex;\n        }\n\n        &__shaddow {\n            background: none;\n            position: relative;\n            width: unset;\n        }\n\n        &__sidebar {\n            max-width: 30%;\n        }\n    }\n}\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "hamburgerButtonService",
                        "type": "HamburgerButtonService"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "hamburgerButtonService",
                        "type": "HamburgerButtonService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"page\">\n    <app-header></app-header>\n    <div class=\"page__content\">\n        <div *ngIf=\"menuIsOpen\" class=\"page__shaddow\">\n            <div class=\"page__sidebar\">\n                <app-sidebar-menu></app-sidebar-menu>\n            </div>\n        </div>\n        <div class=\"page__main\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-f980f2309db56f61be371c6a0e8c0a82",
            "file": "src/app/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "action",
                    "defaultValue": "() => {}",
                    "line": 13
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 12
                },
                {
                    "name": "text",
                    "defaultValue": "'Button'",
                    "line": 10
                },
                {
                    "name": "type",
                    "defaultValue": "'primary'",
                    "line": 11,
                    "type": "\"primary\" | \"secondary\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent {\n\n  @Input() text = 'Button';\n  @Input() type: 'primary' | 'secondary' = 'primary';\n  @Input() disabled = false;\n  @Input() action = () => {};\n\n  handleClick() {\n    if (!this.disabled) {\n      this.action();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/variables\";\n\nbutton {\n    border: none;\n    border-radius: 7px;\n    padding: 8px;\n    font-weight: bold;\n\n    &:hover {\n        text-decoration: underline;\n    }\n}\n\n.primary {\n    background-color: $navy-blue;\n    color: $white;\n}\n\n.secondary {\n    background-color: $yellow;\n    color: $navy-blue;\n}\n\n.disabled {\n    background-color: $light-gray;\n    color: $dark-gray;\n\n    &:hover {\n        text-decoration: none;\n        cursor: default;\n    }\n}\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button [class]=\"type\" (click)=\"handleClick()\" [ngClass]=\"{disabled: disabled}\">\n    {{text}}\n</button>"
        },
        {
            "name": "ButtonPageComponent",
            "id": "component-ButtonPageComponent-c337e3d312e92a521e27b0057b8cd3d8",
            "file": "src/app/pages/button-page/button-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "showAlert",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component} from '@angular/core';\n\n@Component({\n  selector: 'app-button-page',\n  templateUrl: './button-page.component.html'\n})\nexport class ButtonPageComponent {\n\n  showAlert = () => {\n    alert('Clicked');\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<app-default-page [title]=\"'Button'\">\n    <app-button type=\"primary\" [action]=\"showAlert\"></app-button>\n    <app-button type=\"secondary\"></app-button>\n    <app-button type=\"primary\" [action]=\"showAlert\" [disabled]=\"true\"></app-button>\n</app-default-page>"
        },
        {
            "name": "DefaultPageComponent",
            "id": "component-DefaultPageComponent-bfe92b5ce53085977637627ba66d62fe",
            "file": "src/app/pages/default-page/default-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-default-page",
            "styleUrls": [
                "./default-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./default-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "code",
                    "defaultValue": "''",
                    "line": 11
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "line": 10
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "showPreview",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "changeView",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-default-page',\n  templateUrl: './default-page.component.html',\n  styleUrls: ['./default-page.component.scss']\n})\nexport class DefaultPageComponent {\n\n  @Input() title = '';\n  @Input() code = '';\n  showPreview = true;\n\n  changeView() {\n    this.showPreview = !this.showPreview;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/variables\";\n\n.default {\n    margin-top: 16px;\n\n    &__title {\n        color: $yellow;\n    }\n\n    &__separator {\n        border: solid $yellow;\n    }\n\n    &__content {\n        margin-top: 32px;\n        padding: 16px;\n        border: solid 1px;\n    }\n\n    &__action {\n        border: none;\n        background-color: $white;\n        display: flex;\n        padding: 4px;\n\n        &:hover {\n            background-color: $light-gray;\n        }\n    }\n}\n\n.hide {\n    display: none;\n}",
                    "styleUrl": "./default-page.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"default container\">\n    <h2 class=\"default__title\">{{title}}</h2>\n    <div class=\"default__separator\"></div>\n    <div class=\"default__content\">\n        <div class=\"default__preview\" [ngClass]=\"{hide: !showPreview}\">\n            <ng-content></ng-content>\n        </div>\n        <div class=\"default__code\" [ngClass]=\"{hide: showPreview}\">\n            {{code}}\n        </div>\n        <div class=\"\">\n            <button class=\"default__action\" (click)=\"changeView()\">\n                <img src=\"assets/svg/code.svg\" alt=\"code\" />\n            </button>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "ErrorComponent",
            "id": "component-ErrorComponent-50654f08d652aa17cfbc59cc452330e3",
            "file": "src/app/components/error/error.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error",
            "styleUrls": [
                "./error.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./error.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "defaultValue": "new FormControl({value: null})",
                    "line": 11,
                    "type": "FormControl"
                },
                {
                    "name": "message",
                    "defaultValue": "''",
                    "line": 12
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent {\n\n  @Input() control = new FormControl({value: null});\n  @Input() message = '';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".error {\n    color: red;\n    align-items: baseline;\n\n    &__icon {\n        height: 14px;\n    }\n\n    &__message {\n        font-size: 14px;\n    }\n}",
                    "styleUrl": "./error.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div *ngIf=\"control.touched && control.invalid\" class=\"error d-flex\">\n    <img src=\"assets/svg/error.svg\" alt=\"error\" class=\"error__icon\" />\n    <span class=\"error__message\">{{message}}</span>\n</div>"
        },
        {
            "name": "HamburgerButtonComponent",
            "id": "component-HamburgerButtonComponent-677d2730e17b3404969825efc462e86b",
            "file": "src/app/core/header/hamburguer-button/hamburger-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-hamburger-button",
            "styleUrls": [
                "./hamburger-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./hamburger-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emitClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\nimport { HamburgerButtonService } from './hamburger-button.service';\n\n@Component({\n  selector: 'app-hamburger-button',\n  templateUrl: './hamburger-button.component.html',\n  styleUrls: ['./hamburger-button.component.scss']\n})\nexport class HamburgerButtonComponent {\n\n  constructor(private hamburgerButtonService: HamburgerButtonService) { }\n\n  emitClick() {\n    this.hamburgerButtonService.emitClick();\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/variables\";\n\n.menu {\n    border: 0;\n    background-color: $navy-blue;\n}",
                    "styleUrl": "./hamburger-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "hamburgerButtonService",
                        "type": "HamburgerButtonService"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "hamburgerButtonService",
                        "type": "HamburgerButtonService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<button class=\"menu\" (click)=\"emitClick()\">\n    <img src=\"/assets/svg/hamburger-menu.svg\" alt=\"menu\"/>\n</button>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a68ad1da7809786c1e7f267abf58dc65",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 32,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 41,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 35,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 38,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-2b83331db3eaaf641e8835029544c09f-1",
            "file": "src/app/core/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "closeMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\nimport { HamburgerButtonService } from './hamburguer-button/hamburger-button.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n\n  constructor(private hamburgerButtonService: HamburgerButtonService) { }\n\n  closeMenu() {\n    this.hamburgerButtonService.closeMenu();\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/variables\";\n\n.header {\n    background-color: $navy-blue;\n    align-items: center;\n    justify-content: space-evenly;\n\n    a {\n        color: $white;\n        text-align: center;\n        font-size: 2.5em;\n        font-family: Arial, Helvetica, sans-serif;\n        margin: 0;\n\n        &:hover {\n            text-decoration: none;\n        }\n    }\n}\n\n@media (min-width: $mobile-width) {\n    .header__menu {\n        display: none;\n    }\n}\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "hamburgerButtonService",
                        "type": "HamburgerButtonService"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "hamburgerButtonService",
                        "type": "HamburgerButtonService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<div class=\"header row d-flex justify-content-evenly m-0\">\n    <app-hamburger-button class=\"header__menu\"></app-hamburger-button>\n    <a [routerLink]=\"['/']\" (click)=\"closeMenu()\">Component Lib</a>\n</div>"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-0368ba31f32dcbd90cb54a0bd661b89c",
            "file": "src/app/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/variables\";\n\n.home {\n\n    margin: 32px;\n\n    &__title {\n        color: $yellow;\n        margin-bottom: 32px;\n    }\n\n    a {\n        color: $navy-blue;\n        text-decoration: underline;\n    }\n}\n",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"home\">\n    <h2 class=\"home__title\">About the project</h2>\n    <p>This project is a component library, created to study the Storybook tool.</p>\n    <p>See the Storybook documentation <a href=\"https://storybook.js.org/\">here</a>.</p>\n</div>\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-85c96188372982e39d02d7a792f3ba02",
            "file": "src/app/components/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "defaultValue": "new FormControl({value: null})",
                    "line": 17,
                    "type": "FormControl"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 14
                },
                {
                    "name": "errors",
                    "defaultValue": "[]",
                    "line": 16,
                    "type": "Array<string>"
                },
                {
                    "name": "id",
                    "defaultValue": "'input'",
                    "line": 13
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "line": 12
                },
                {
                    "name": "mask",
                    "defaultValue": "''",
                    "line": 15
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "line": 11
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "change",
                            "type": "SimpleChanges"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "change",
                            "type": "SimpleChanges",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss']\n})\nexport class InputComponent implements OnChanges {\n\n  @Input() type = 'text';\n  @Input() label = '';\n  @Input() id = 'input';\n  @Input() disabled = false;\n  @Input() mask = '';\n  @Input() errors: Array<string> = [];\n  @Input() control = new FormControl({value: null});\n\n  ngOnChanges(change: SimpleChanges) {\n    if (change.disabled?.currentValue) {\n      this.control.disable();\n    } else if (change.disabled?.currentValue === false) {\n      this.control.enable();\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/variables\";\n\n.input {\n    &__field {\n        border: solid 1px;\n        border-radius: 7px;\n\n        &:focus {\n            outline: none;\n        }\n    }\n}\n\n.disabled {\n    background-color: $light-gray;\n}",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"input d-flex flex-column\">\n    <label [for]=\"id\">{{label}}</label>\n    <input\n        [type]=\"type\"\n        [id]=\"id\"\n        class=\"input__field\"\n        [mask]=\"mask\"\n        [formControl]=\"control\"\n        [ngClass]=\"{disabled: disabled}\"\n    />\n    <app-error [message]=\"errors[0]\" [control]=\"control\"></app-error>\n</div>"
        },
        {
            "name": "InputPageComponent",
            "id": "component-InputPageComponent-7cf5a11d0b42375b7f5a5eab32c34ee3",
            "file": "src/app/pages/input-page/input-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./input-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "code",
                    "defaultValue": "`<app-input label=\"Input field\" id=\"simple-input\" [disabled]=\"false\" [errors]=\"errors\" [control]=\"control\"></app-input>`",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "control",
                    "defaultValue": "new FormControl(null, [Validators.required, Validators.maxLength(10)])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\ninterface IErrors {\n  required: string;\n  maxlength: string;\n}\n\n@Component({\n  selector: 'app-input-page',\n  templateUrl: './input-page.component.html'\n})\nexport class InputPageComponent {\n\n  get errors(): string[] {\n    const errorMessages: IErrors = {\n      required: 'Please fill in the field',\n      maxlength: 'The value exceeds the allowed number of characters'\n    };\n \n    if (this.control.errors !== null) {\n      return Object.keys(this.control.errors).map((error) => errorMessages[error as keyof IErrors]);\n    }\n\n    return [];\n  }\n\n  control = new FormControl(null, [Validators.required, Validators.maxLength(10)]);\n\n  readonly code = `<app-input label=\"Input field\" id=\"simple-input\" [disabled]=\"false\" [errors]=\"errors\" [control]=\"control\"></app-input>`;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "errors": {
                    "name": "errors",
                    "getSignature": {
                        "name": "errors",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<app-default-page [title]=\"'Input'\" [code]=\"code\">\n    <app-input\n        label=\"Input field\"\n        id=\"simple-input\"\n        [disabled]=\"false\"\n        [errors]=\"errors\"\n        [control]=\"control\"\n    >\n    </app-input>\n</app-default-page>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-8f196770333aa216860a88c0b6b221aa",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 64,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 67,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 70,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "SelectComponent",
            "id": "component-SelectComponent-70e55c6e1fbf0ab3da236cd6c1aed4f4",
            "file": "src/app/components/select/select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select",
            "styleUrls": [
                "./select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "defaultValue": "new FormControl({value: null})",
                    "line": 20,
                    "type": "FormControl"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 19
                },
                {
                    "name": "error",
                    "defaultValue": "''",
                    "line": 21
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "line": 18
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "line": 17
                },
                {
                    "name": "options",
                    "defaultValue": "[{\n    value: '',\n    viewValue: ''\n  }]",
                    "line": 13,
                    "type": "Options"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "change",
                            "type": "SimpleChanges"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "jsdoctags": [
                        {
                            "name": "change",
                            "type": "SimpleChanges",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { Options } from '../../core/types/select.type';\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss']\n})\nexport class SelectComponent implements OnChanges {\n\n  @Input() options: Options = [{\n    value: '',\n    viewValue: ''\n  }];\n  @Input() label = '';\n  @Input() id = '';\n  @Input() disabled = false;\n  @Input() control = new FormControl({value: null});\n  @Input() error = '';\n\n  ngOnChanges(change: SimpleChanges) {\n    if (change.disabled?.currentValue) {\n      this.control.disable();\n    } else if (change.disabled?.currentValue === false) {\n      this.control.enable();\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/variables\";\n\n.select {\n    &__field {\n        background-color: $white;\n        border: solid 1px;\n        border-radius: 7px;\n        height: 28px;\n\n        &:focus {\n            outline: none;\n        }\n    }\n\n    &__option {\n        &:checked {\n            background-color: $navy-blue;\n            color: $yellow;\n        }\n    }\n}\n\n.disabled {\n    background-color: $light-gray;\n}\n",
                    "styleUrl": "./select.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"select input d-flex flex-column\">\n    <label [for]=\"id\">{{label}}</label>\n    <select class=\"select__field\" [ngClass]=\"{disabled: disabled}\" [formControl]=\"control\">\n        <option></option>\n        <option *ngFor=\"let opt of options\" value=\"opt.value\" class=\"select__option\">{{ opt.viewValue }}</option>\n    </select>\n    <app-error [message]=\"error\" [control]=\"control\"></app-error>\n</div>"
        },
        {
            "name": "SelectPageComponent",
            "id": "component-SelectPageComponent-5e5931a16d49edde9412a9faa5875307",
            "file": "src/app/pages/select-page/select-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./select-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "code",
                    "defaultValue": "`<app-select [options]=\"options\" [label]=\"'Select'\" [id]=\"'select'\" [control]=\"control\" [error]=\"error\"></app-select>`",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "control",
                    "defaultValue": "new FormControl(null, [Validators.required])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "error",
                    "defaultValue": "'Please fill in the field'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "options",
                    "defaultValue": "[\n    {\n      value: 'option1',\n      viewValue: 'Option 1'\n    },\n    {\n      value: 'option2',\n      viewValue: 'Option 2'\n    },\n    {\n      value: 'option3',\n      viewValue: 'Option 3'\n    }\n  ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-select-page',\n  templateUrl: './select-page.component.html'\n})\nexport class SelectPageComponent {\n\n  options = [\n    {\n      value: 'option1',\n      viewValue: 'Option 1'\n    },\n    {\n      value: 'option2',\n      viewValue: 'Option 2'\n    },\n    {\n      value: 'option3',\n      viewValue: 'Option 3'\n    }\n  ];\n\n  control = new FormControl(null, [Validators.required]);\n\n  readonly error = 'Please fill in the field';\n  readonly code = `<app-select [options]=\"options\" [label]=\"'Select'\" [id]=\"'select'\" [control]=\"control\" [error]=\"error\"></app-select>`;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<app-default-page [title]=\"'Select'\" [code]=\"code\">\n    <app-select\n        [options]=\"options\"\n        [label]=\"'Select'\"\n        [id]=\"'select'\"\n        [control]=\"control\"\n        [error]=\"error\"\n    >\n    </app-select>\n</app-default-page>"
        },
        {
            "name": "SidebarMenuComponent",
            "id": "component-SidebarMenuComponent-a85ebf6d056965b7eb87619ae4d53368",
            "file": "src/app/core/sidebar-menu/sidebar-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidebar-menu",
            "styleUrls": [
                "./sidebar-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidebar-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "menuItems",
                    "defaultValue": "[\n    {\n      name: 'Input',\n      url: '/input'\n    },\n    {\n      name: 'Select',\n      url: '/select'\n    },\n    {\n      name: 'Button',\n      url: '/button'\n    }\n  ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "closeMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\nimport { HamburgerButtonService } from '../header/hamburguer-button/hamburger-button.service';\n\n@Component({\n  selector: 'app-sidebar-menu',\n  templateUrl: './sidebar-menu.component.html',\n  styleUrls: ['./sidebar-menu.component.scss']\n})\nexport class SidebarMenuComponent {\n\n  menuItems = [\n    {\n      name: 'Input',\n      url: '/input'\n    },\n    {\n      name: 'Select',\n      url: '/select'\n    },\n    {\n      name: 'Button',\n      url: '/button'\n    }\n  ];\n\n  constructor(private hamburgerButtonService: HamburgerButtonService) { }\n\n  closeMenu() {\n    this.hamburgerButtonService.emitClick();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/variables\";\n\n.menu {\n    height: 100%;\n    border: solid 1px;\n    background-color: $white;\n\n    &__list {\n        padding-left: 0;\n    }\n\n    &__item {\n       list-style-type: none;\n       border-bottom: 1px solid;\n       font-size: 30px;\n       padding-left: 2px;\n\n       .menu__link {\n           display: block;\n       }\n\n       &:hover {\n           background-color: $dark-gray;\n       }\n    }\n\n    &__item--active {\n        background-color: $navy-blue;\n\n        .menu__link {\n            color: $yellow;\n        }\n\n        &:hover {\n            background-color: $navy-blue;\n        }\n    }\n\n    &__link {\n        color: $navy-blue;\n        &:hover {\n            text-decoration: none;\n        }\n    }\n}\n\n@media (min-width: $mobile-width) {\n    .menu__item {\n        font-size: 1rem;\n    }\n}\n",
                    "styleUrl": "./sidebar-menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "hamburgerButtonService",
                        "type": "HamburgerButtonService"
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "hamburgerButtonService",
                        "type": "HamburgerButtonService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<aside class=\"menu\">\n    <nav>\n        <ul class=\"menu__list\">\n            <li class=\"menu__item\" [routerLinkActive]=\"'menu__item--active'\" *ngFor=\"let item of menuItems\">\n                <a [routerLink]=\"[item.url]\" class=\"menu__link\" (click)=\"closeMenu()\">{{item.name}}</a>\n            </li>\n        </ul>\n    </nav>\n</aside>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "HeaderModule"
                        },
                        {
                            "name": "SidebarMenuModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonPageModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonPageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "DefaultPageModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DefaultPageModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DefaultPageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DefaultPageComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ErrorModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ErrorComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ErrorComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HeaderModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HamburgerButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HamburgerButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InputModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ErrorModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "InputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InputPageModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InputPageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DefaultPageModule"
                        },
                        {
                            "name": "InputModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SelectModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SelectComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ErrorModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SelectComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SelectPageModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SelectPageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DefaultPageModule"
                        },
                        {
                            "name": "SelectModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SidebarMenuModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SidebarMenuComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonPageModule"
                        },
                        {
                            "name": "InputPageModule"
                        },
                        {
                            "name": "SelectPageModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SidebarMenuComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/header/header.module.ts",
                "type": "[]",
                "defaultValue": "[HeaderComponent, HamburgerButtonComponent]"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Enabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Enabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Masked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "options",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select.stories.ts",
                "type": "[]",
                "defaultValue": "[\n    {\n        value: 'option1',\n        viewValue: 'Option 1'\n    },\n    {\n        value: 'option2',\n        viewValue: 'Option 2'\n    }\n]"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button.stories.ts",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/input.stories.ts",
                "type": "Story<InputComponent>",
                "defaultValue": "(args: InputComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select.stories.ts",
                "type": "Story<SelectComponent>",
                "defaultValue": "(args: SelectComponent) => ({\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Option",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/core/types/select.type.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Options",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Array<Option>",
                "file": "src/app/core/types/select.type.ts",
                "description": "",
                "kind": 161
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/core/header/header.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/header/header.module.ts",
                    "type": "[]",
                    "defaultValue": "[HeaderComponent, HamburgerButtonComponent]"
                }
            ],
            "src/stories/input.stories.ts": [
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Enabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Masked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/input.stories.ts",
                    "type": "Story<InputComponent>",
                    "defaultValue": "(args: InputComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/select.stories.ts": [
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Enabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "options",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select.stories.ts",
                    "type": "[]",
                    "defaultValue": "[\n    {\n        value: 'option1',\n        viewValue: 'Option 1'\n    },\n    {\n        value: 'option2',\n        viewValue: 'Option 2'\n    }\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select.stories.ts",
                    "type": "Story<SelectComponent>",
                    "defaultValue": "(args: SelectComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/button.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button.stories.ts",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/core/types/select.type.ts": [
                {
                    "name": "Option",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/core/types/select.type.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Options",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Array<Option>",
                    "file": "src/app/core/types/select.type.ts",
                    "description": "",
                    "kind": 161
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "input",
                        "component": "InputPageComponent"
                    },
                    {
                        "path": "select",
                        "component": "SelectPageComponent"
                    },
                    {
                        "path": "button",
                        "component": "ButtonPageComponent"
                    },
                    {
                        "path": "",
                        "component": "HomeComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/error/error.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/select/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/header/hamburguer-button/hamburger-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HamburgerButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/header/hamburguer-button/hamburger-button.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HamburgerButtonService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/header/header.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/sidebar-menu/sidebar-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/button-page/button-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/default-page/default-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DefaultPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/input-page/input-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/input-page/input-page.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IErrors",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/select-page/select-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Enabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Masked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Enabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "options",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}